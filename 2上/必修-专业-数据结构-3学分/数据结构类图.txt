digraph G {
    node [shape=record];
    
    class ArrayList {
        - array: T*
        - maxSize: int
        - currentSize: int
        + ArrayList(size: int)
        + add(item: const T&): void
        + size(): int
        + operator[](index: int): T&
    }

    class Queue {
        - list: ArrayList<T>
        - count: int
        + enqueue(item: const T&): void
        + dequeue(): void
        + front(): T&
        + isEmpty(): bool
        + at(index: int): T&
        + size(): int
    }

    class TrainTicket {
        - trainNo: string
        - startStation: string
        - endStation: string
        - departureTime: string
        - arrivalTime: string
        - seatCount: int
        - remainingCount: int
        + TrainTicket()
        + TrainTicket(no: string, start: string, end: string, depart: string, arrive: string, seats: int, remain: int)
    }

    class TrainOrder {
        - orderNo: string
        - trainNo: string
        - startStation: string
        - endStation: string
        - departureTime: string
        - arrivalTime: string
        - seatType: string
        - seatCount: int
        - status: int
        + TrainOrder()
        + TrainOrder(no: string, train: string, start: string, end: string, depart: string, arrive: string, type: string, count: int)
    }

    class TicketSystem {
        - trainList: ArrayList<TrainTicket>
        - orderList: ArrayList<TrainOrder>
        - waitList: Queue<pair<string, int>>
        + addTrainTicket(no: string, start: string, end: string, depart: string, arrive: string, seats: int, remain: int): void
        + getRemainingCount(trainNo: string, date: string): int
        + buyTicket(trainNo: string, date: string, seatType: string, count: int, username: string): bool
        + refundTicket(orderNo: string): bool
        + showTrainInfo(): void
        + showOrderInfo(): void
        + queryOrderStatus(orderNo: string): void
        + queryTrainTime(trainNo: string): void
        + showWaitList(): void
    }

    ArrayList:-- Queue
    TicketSystem:-- ArrayList
    TicketSystem:-- Queue
}
